// Code generated by ent, DO NOT EDIT.

package shortcut

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the shortcut type in the database.
	Label = "shortcut"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldShortcut holds the string denoting the shortcut field in the database.
	FieldShortcut = "shortcut"
	// FieldExp holds the string denoting the exp field in the database.
	FieldExp = "exp"
	// Table holds the table name of the shortcut in the database.
	Table = "shortcuts"
)

// Columns holds all SQL columns for shortcut fields.
var Columns = []string{
	FieldID,
	FieldURL,
	FieldShortcut,
	FieldExp,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// URLValidator is a validator for the "url" field. It is called by the builders before save.
	URLValidator func(string) error
	// ShortcutValidator is a validator for the "shortcut" field. It is called by the builders before save.
	ShortcutValidator func(string) error
)

// OrderOption defines the ordering options for the Shortcut queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByURL orders the results by the url field.
func ByURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldURL, opts...).ToFunc()
}

// ByShortcut orders the results by the shortcut field.
func ByShortcut(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldShortcut, opts...).ToFunc()
}

// ByExp orders the results by the exp field.
func ByExp(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExp, opts...).ToFunc()
}
